import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as t,c as e,a as n,b as o,d as s,e as c,r as l}from"./app.71d4843f.js";const u={},i=n("h1",{id:"\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22","aria-hidden":"true"},"#"),s(" \u5E7F\u5EA6\u4F18\u5148\u641C\u7D22")],-1),k=n("h2",{id:"\u95EE\u9898\u80CC\u666F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u95EE\u9898\u80CC\u666F","aria-hidden":"true"},"#"),s(" \u95EE\u9898\u80CC\u666F")],-1),r={href:"https://leetcode.cn/problems/maximum-level-sum-of-a-binary-tree/",target:"_blank",rel:"noopener noreferrer"},d=s("1161. \u6700\u5927\u5C42\u5185\u5143\u7D20\u548C"),v=c(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u7ED9\u4F60\u4E00\u4E2A\u4E8C\u53C9\u6811\u7684\u6839\u8282\u70B9 root\u3002\u8BBE\u6839\u8282\u70B9\u4F4D\u4E8E\u4E8C\u53C9\u6811\u7684\u7B2C <span class="token number">1</span> \u5C42\uFF0C\u800C\u6839\u8282\u70B9\u7684\u5B50\u8282\u70B9\u4F4D\u4E8E\u7B2C <span class="token number">2</span> \u5C42\uFF0C\u4F9D\u6B64\u7C7B\u63A8\u3002

\u8BF7\u8FD4\u56DE\u5C42\u5185\u5143\u7D20\u4E4B\u548C \u6700\u5927 \u7684\u90A3\u51E0\u5C42\uFF08\u53EF\u80FD\u53EA\u6709\u4E00\u5C42\uFF09\u7684\u5C42\u53F7\uFF0C\u5E76\u8FD4\u56DE\u5176\u4E2D \u6700\u5C0F \u7684\u90A3\u4E2A\u3002

\u793A\u4F8B<span class="token operator">:</span>

\u8F93\u5165\uFF1Aroot <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token number">2</span>
\u89E3\u91CA\uFF1A
\u7B2C <span class="token number">1</span> \u5C42\u5404\u5143\u7D20\u4E4B\u548C\u4E3A <span class="token number">1</span>\uFF0C
\u7B2C <span class="token number">2</span> \u5C42\u5404\u5143\u7D20\u4E4B\u548C\u4E3A <span class="token number">7</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">7</span>\uFF0C
\u7B2C <span class="token number">3</span> \u5C42\u5404\u5143\u7D20\u4E4B\u548C\u4E3A <span class="token number">7</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">8</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>\uFF0C
\u6240\u4EE5\u6211\u4EEC\u8FD4\u56DE\u7B2C <span class="token number">2</span> \u5C42\u7684\u5C42\u53F7\uFF0C\u5B83\u7684\u5C42\u5185\u5143\u7D20\u4E4B\u548C\u6700\u5927\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><p>\u9898\u76EE\u8981\u6C42\u5C42\u548C\u6700\u5927\u7684\u5C42\u6570\uFF0C\u5982\u679C\u6709\u591A\u4E2A\u53D6\u6700\u5C0F\u7684\u90A3\u4E2A\u3002 \u76F4\u89C9\u65B9\u6CD5\u5C31\u662F\u6C42\u51FA\u6BCF\u4E00\u5C42\u7684\u548C\uFF0C\u7136\u540E\u6BD4\u8F83\uFF0C\u5982\u679C\u5F53\u524D\u7684\u548C\u6BD4\u4E4B\u524D\u6700\u5927\u7684\u548C\u8FD8\u8981\u5927\uFF0C\u90A3\u4E48\u5F53\u524D\u5C42\u5C31\u662F\u7B54\u6848\u3002 \u8FD9\u4E2A\u5C31\u53EF\u4EE5\u7528\u5E7F\u5EA6\u4F18\u5148\u7684\u601D\u8DEF\u6765\u89E3\u51B3 \u5E7F\u5EA6\u4F18\u5148\u5C31\u662F\u4E00\u8D77\u5904\u7406\u540C\u4E00\u5E7F\u5EA6\uFF08\u6DF1\u5EA6\uFF09\u7684\u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">BFS</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//\u58F0\u660E\u4E00\u4E2A\u961F\u5217\u4FDD\u5B58\u540C\u4E00\u5C42\u7684\u4FE1\u606F</span>
    <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">&gt;</span></span> queue<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5148\u628A\u6839\u5143\u7D20\u653E\u8FDB\u53BB</span>
    queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u7528\u4E8E\u6BD4\u8F83\u6700\u5927\u503C</span>
    <span class="token keyword">int</span> max<span class="token operator">=</span><span class="token operator">-</span><span class="token number">100009</span><span class="token punctuation">;</span>
    <span class="token comment">//\u8BB0\u5F55\u5F53\u524D\u5C42\u6570</span>
    <span class="token keyword">int</span> level<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">//\u8BB0\u5F55\u8FD4\u56DE\u503C</span>
    <span class="token keyword">int</span> res<span class="token operator">=</span>level<span class="token punctuation">;</span>
    <span class="token comment">//\u5F53\u8FD8\u6709\u5143\u7D20\u7684\u65F6\u5019</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span> queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u83B7\u5F97\u5F53\u524D\u5C42\u7684\u5143\u7D20\u4E2A\u6570</span>
        <span class="token keyword">int</span> size<span class="token operator">=</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u7EDF\u8BA1\u5F53\u524D\u5C42\u7684\u548C</span>
        <span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5230\u4E86\u65B0\u7684\u5C42\u6570\u81EA\u589E</span>
        level<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//\u5FAA\u73AF\u53D6\u51FA\u8FD9\u4E00\u5C42\u6BCF\u4E2A\u5143\u7D20</span>
            <span class="token class-name">TreeNode</span> tt<span class="token operator">=</span>queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u8BA1\u7B97\u548C</span>
            sum <span class="token operator">+=</span> tt<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
            <span class="token comment">//\u628A\u4E0D\u4E3A\u7A7A\u7684\u5B69\u5B50\u4E5F\u52A0\u5165\u5230\u4E0B\u4E00\u5C42\u53BB</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u6BD4\u8F83\u5F53\u524D\u5C42\u7684\u548C\u4E8E\u6700\u5927\u503C\u6BD4\u8F83\uFF0C\u5982\u679C\u5927\u4E8E\u5C31\u8BB0\u5F55\u4FE1\u606F</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>max <span class="token operator">&lt;</span> sum<span class="token punctuation">)</span><span class="token punctuation">{</span>
            max<span class="token operator">=</span>sum<span class="token punctuation">;</span>
            res<span class="token operator">=</span>level<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u80FD\u591F\u4F7F\u7528\u5E7F\u5EA6\u4F18\u5148\u7684\u9898\u76EE-\u4E00\u822C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u6DF1\u5EA6\u4F18\u5148\u6539\u9020" tabindex="-1"><a class="header-anchor" href="#\u80FD\u591F\u4F7F\u7528\u5E7F\u5EA6\u4F18\u5148\u7684\u9898\u76EE-\u4E00\u822C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u6DF1\u5EA6\u4F18\u5148\u6539\u9020" aria-hidden="true">#</a> \u80FD\u591F\u4F7F\u7528\u5E7F\u5EA6\u4F18\u5148\u7684\u9898\u76EE\uFF0C\u4E00\u822C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u6DF1\u5EA6\u4F18\u5148\u6539\u9020</h2><p><code>\u601D\u8DEF</code> \u6DF1\u5EA6\u4F18\u5148\u7684\u601D\u8DEF\u662F\u4E00\u6761\u9053\u8D70\u5230\u9ED1\uFF0C\u6240\u4EE5\u9700\u8981List\u6216\u8005Map\u8BB0\u5F55\u5F53\u524D\u5C42\u7684\u5F53\u524D\u548C\uFF0C\u6700\u540E\u904D\u5386\u5B8C\u6210\u53BB\u627E\u6700\u5927\u7684\u5C42\u6570</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u9009\u62E9Map\u8BB0\u5F55\u6BCF\u4E00\u5C42\u7684\u548C  hashkey\u662F\u5C42\u6570  hashvalue \u662F\u5F53\u524D\u5C42\u6570\u7684\u548C </span>
<span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxLevelSum</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> res<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>max<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1000009</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> entry<span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>max <span class="token operator">&lt;</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
            max<span class="token operator">=</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            res<span class="token operator">=</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> level<span class="token punctuation">,</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>root <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>level<span class="token punctuation">,</span>map<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>level<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>level<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>level<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function m(b,f){const a=l("ExternalLinkIcon");return t(),e("div",null,[i,k,n("p",null,[n("a",r,[d,o(a)])]),v])}var w=p(u,[["render",m],["__file","bfs.html.vue"]]);export{w as default};
